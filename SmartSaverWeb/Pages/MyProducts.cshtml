@page
@model SmartSaverWeb.Pages.MyProductsModel
@Html.AntiForgeryToken()
@{
    Layout = "_Layout"; // ✅ This tells Razor to use your layout
    ViewData["Title"] = "My Tracked Products";
    Response.Headers["X-Robots-Tag"] = "noindex, nofollow";
}
@section Styles {
    <!-- If Bootstrap isn't already in _Layout, this loads it only for this page -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/my-products.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
}

@if (Model.Debug == 1)
{
    <pre style="background:#fafafa;border:1px solid #ddd;padding:10px">
    Path: @Model.DataPath
    Exists: @(System.IO.File.Exists(Model.DataPath))
    Total in file: @Model.TotalRead
    Filtered for "@Model.Email": @(Model.Products?.Count ?? 0)
    LastError: @Model.LastError
        </pre>
}

<div class="container mt-5">
    <div class="page-header mb-3">
        <h1 class="display-5">My Tracked Products</h1>
        @if (!string.IsNullOrWhiteSpace(Model.Email))
        {
            <p class="lead text-muted mb-0">
                Showing results for: <strong>@Model.Email</strong>
            </p>
        }
        <div class="text-muted">Count: @(Model.Products?.Count ?? 0)</div>
    </div>

    @if (Model.Products != null && Model.Products.Any())
    {
        <!-- Grid -->
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-3 mb-4">
            @foreach (var product in Model.Products)
            {
                @await Html.PartialAsync("~/Pages/Shared/_ProductCard.cshtml", product)
            }
        </div>

        @* Debug fallback list so you always see items while testing *@
        @if (Model.Debug == 1)
        {
            <div class="card">
                <div class="card-header">Debug: Plain List (fallback)</div>
                <ul class="list-group list-group-flush">
                    @foreach (var p in Model.Products)
                    {
                        <li class="list-group-item">[@p.Asin] @p.Title — @p.TimestampUtc.ToLocalTime():yyyy-MM-dd HH:mm</li>
                    }
                </ul>
            </div>
        }
    }
    else
    {
        <div class="empty-state text-center my-5">
            <div class="empty-state-icon" style="font-size:48px;">🛍️</div>
            <h2>No Products Found</h2>
            <p class="lead text-muted">
                You haven't tracked any products yet. Use the Paynles Chrome extension on an Amazon product page to get started!
            </p>
        </div>
    }
</div>
